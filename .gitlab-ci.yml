workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

image: docker:20-git
services:
  - docker:20-dind
variables:
  DOCKER_IMAGE: ubuntu
  DOCKER_TAG: 1.0.0

stages:
  - test
  - build
  - deploy

test_env:
  stage: test
  variables:
    RUN_TEST_SCRIPT: test.sh
  before_script:
    - echo "Preparing to run tests"
  script:
    - chmod +x $RUN_TEST_SCRIPT
    - ./$RUN_TEST_SCRIPT

build_app:
  stage: build
  only:
    - main
  script:
    - cd python_app
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .

scan_image:
  only:
    - main
  stage: build
  needs:
    - build_app
  before_script:
    - echo "Installing dependencies to scan image"
    - apt-get update -y && apt-get install -y docker-scan-plugin
  script:
    - echo "Scanning and checking created docker image $DOCKER_IMAGE:$DOCKER_TAG"
    - docker images
    # - docker inspect $DOCKER_IMAGE:$DOCKER_TAG
    # - docker history $DOCKER_IMAGE:$DOCKER_TAG
    # - docker scan $DOCKER_IMAGE:$DOCKER_TAG


# test_app:
#   stage: test
#   before_script:
#     - echo "Testing created docker image"
#   script:
#     - sudo docker history $DOCKER_IMAGE:DOCKER_TAG
#     - docker scan $DOCKER_IMAGE:DOCKER_TAG
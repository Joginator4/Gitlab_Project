workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  DOCKER_IMAGE: python
  DOCKER_TAG: app-3.0
  REPO: 867452


stages:
  - test
  - build
  - deploy

unit_test_run:
  stage: test
  image: python:3.11.3-alpine3.16
  tags:
    - local
    - docker
    - linux
  variables:
    UNIT_TEST: unit_tests.py
    UNIT_TEST_RESULT: unittest_result.xml
  before_script:
    - echo "Preparing to run tests"
    - cd python_app
    - pip install --upgrade pip
    - pip install unittest
  script:
    - python3 $UNIT_TEST > $UNIT_TEST_RESULT 2>&1
  artifacts:
    when: always
    reports:
      junit: python_app/$UNIT_TEST_RESULT


build_app:
  stage: build
  only:
    - main
  tags:
    - local
    - shell
  script:
    - cd python_app
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker build -t $REPO/$DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $REPO/$DOCKER_IMAGE:$DOCKER_TAG

deploy_app:
  only:
    - main
  stage: deploy
  tags:
    - aws
    - remote
    - shell
    - ubuntu
  needs:
    - build_app
  before_script:
    - echo "Deploying pushed $DOCKER_IMAGE:$DOCKER_TAG from CR"
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  script:
    - docker pull $REPO/$DOCKER_IMAGE:$DOCKER_TAG
    - docker images
    - docker run -d -it $REPO/$DOCKER_IMAGE:$DOCKER_TAG
    - docker ps